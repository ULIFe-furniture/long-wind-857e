name: edge-runtime-guard
on:
  pull_request:
    branches: [ main, master ]
env:
  ENFORCE: ${{ contains(github.event.pull_request.title, '[enforce-guards]') }}
jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Detect PM
        id: detect
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then echo "pm=pnpm" >> "$GITHUB_OUTPUT";
          elif [ -f yarn.lock ]; then echo "pm=yarn"  >> "$GITHUB_OUTPUT";
          else echo "pm=npm" >> "$GITHUB_OUTPUT"; fi

      - uses: pnpm/action-setup@v4
        if: ${{ steps.detect.outputs.pm == 'pnpm' }}
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ${{ steps.detect.outputs.pm }}

      - name: Install
        shell: bash
        run: |
          if [ "${{ steps.detect.outputs.pm }}" = "pnpm" ]; then pnpm i --frozen-lockfile;
          elif [ "${{ steps.detect.outputs.pm }}" = "yarn" ]; then yarn install --frozen-lockfile;
          else npm ci; fi
        continue-on-error: ${{ !env.ENFORCE }}

      - name: ESLint – optional
        if: ${{ hashFiles('.eslintrc*') != '' }}
        run: npx eslint . --max-warnings=0
        continue-on-error: ${{ !env.ENFORCE }}

      - name: Fail nếu còn runtime='nodejs'
        shell: bash
        run: |
          if git grep -n "runtime *= *['\"]nodejs['\"]" -- ':!node_modules'; then
            echo "::error::Found runtime='nodejs'"; exit 1; fi
        continue-on-error: ${{ !env.ENFORCE }}

      - name: Build Next
        shell: bash
        run: |
          if [ "${{ steps.detect.outputs.pm }}" = "pnpm" ]; then pnpm next build;
          elif [ "${{ steps.detect.outputs.pm }}" = "yarn" ]; then yarn next build;
          else npx next build; fi
        continue-on-error: ${{ !env.ENFORCE }}

      - name: Build Cloudflare Pages
        run: npx @cloudflare/next-on-pages@latest build
        continue-on-error: ${{ !env.ENFORCE }}
